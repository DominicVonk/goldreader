"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LLRPClassRegistry = void 0;
const message_1 = require("../typed/message");
const parameter_1 = require("../typed/parameter");
class LLRPClassRegistry {
    constructor() {
        this.CoreMessageClasses = {};
        this.CoreParamClasses = {};
    }
    static getInstance(def, name) {
        if (!this.instance) {
            this.instance = new this();
        }
        return this.instance;
    }
    reset() {
        this.CoreMessageClasses = {};
        this.CoreParamClasses = {};
        return this;
    }
    enrollCoreDefinitions(Def) {
        this.CoreDef = Def;
        return this;
    }
    build() {
        for (let name in this.CoreDef) {
            const td = this.CoreDef[name];
            if (td.isMessage)
                this.CoreMessageClasses[name] = message_1.LLRPTypedMessage.ofType(this.CoreDef, name);
            else if (!td.isMessage && td.typeNum >= 0)
                this.CoreParamClasses[name] = parameter_1.LLRPTypedParameter.ofType(this.CoreDef, name);
        }
        return this;
    }
    getCoreMessageClasses() {
        return this.CoreMessageClasses;
    }
    getCoreParamClasses() {
        return this.CoreParamClasses;
    }
    getCoreMessageClass(name) {
        return this.CoreMessageClasses[name];
    }
    getCoreParameterClass(name) {
        return this.CoreParamClasses[name];
    }
}
exports.LLRPClassRegistry = LLRPClassRegistry;
//# sourceMappingURL=class-registry.js.map